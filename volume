#!/bin/sh
# Distributed under the terms of the GNU General Public License v3

# strict mode
set -eu

# settings
progname="volume" # program name
volmaster="90"    # default master volume
voladjust="5"     # value to increase/decrease volume

# help usage info
help() {
  echo "Usage: $progname up|down|toggle|restore"
}

# shows the message and exits the program
panic() {
  echo "$@" 1>&2
  exit 1
}

# get the app sink from the active window
getappsink() {
  # TODO xdotool getactivewindow getwindowclassname
  class=$(xprop -id "$(xdotool getactivewindow)" | awk -F '"' '/^WM_CLASS\(/ { print $4 }')
  sink=$(
    pactl list sink-inputs | \
    awk 'BEGIN { s = "" } {
        if ($0 ~ "^Sink Input #") {
          s = substr($3, 2)
        }
        if (s != "" && tolower($0) ~ tolower("application.name = \"'"$class"'\"$")) {
          print s
          exit
        }
    }'
  )
  echo "$sink"
}

# display help if no arguments supplied
if [ $# -ne 1 ]; then
  panic "$(help)"
fi

# command line argument
arg="$1"

# display help if no expected arguments supplied
case $arg in
  up|upapp|down|downapp|restore|restoreapp|toggle|toggleapp)
    ;;
  *)
    # unknown argument
    panic "$(help)"
    ;;
esac

# options
case $arg in
  up)
    pactl set-sink-volume "@DEFAULT_SINK@" +${voladjust}%
    ;;
  upapp)
    pactl set-sink-input-volume "$(getappsink)" +${voladjust}%
    ;;
  down)
    pactl set-sink-volume "@DEFAULT_SINK@" -${voladjust}%
    ;;
  downapp)
    pactl set-sink-input-volume "$(getappsink)" -${voladjust}%
    ;;
  restore)
    pactl set-sink-volume "@DEFAULT_SINK@" ${volmaster}%
    ;;
  restoreapp)
    pactl set-sink-input-volume "$(getappsink)" ${volmaster}%
    ;;
  toggle)
    pactl set-sink-mute "@DEFAULT_SINK@" toggle
    ;;
  toggleapp)
    pactl set-sink-input-mute "$(getappsink)" toggle
    ;;
esac
